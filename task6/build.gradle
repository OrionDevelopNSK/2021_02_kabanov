//Билдится проект через -> Execute Gradle Task -> Gradle assemble


plugins {
    id 'application'
    id 'java'
}

group 'org.example'
version '1.0'

repositories {
    mavenCentral()
}

task createClientJar(type: Jar) {
    baseName 'ClientOfChat'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes 'Main-Class': 'client.app.Main'
    }

    from sourceSets.main.output
    from {
        configurations.runtimeClasspath.filter { it.exists() }.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude "**/server/**"
}

task createServerJar(type: Jar) {
    baseName 'ServerOfChat'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes 'Main-Class': 'server.app.Main'
    }

    from sourceSets.main.output
    from {
        configurations.runtimeClasspath.filter { it.exists() }.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude "**/client/**"
}

artifacts {
    archives createClientJar
    archives createServerJar
}

jar {
    actions = [] as List<Action<? super Task>>
}

dependencies {
    implementation 'junit:junit:4.13.1'
    implementation 'org.slf4j:slf4j-log4j12:1.7.32'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}